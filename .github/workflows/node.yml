name: Build and Deploy
on:
  # Triggers the workflow on push to matching branches
  push:
    branches:
      - dev 
      
  workflow_dispatch:
             
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  envbranch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check the branch and select the envirnoment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "env_name=dev" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/prod" ]; then    
            echo "env_name=pilot" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/pilot" ]; then    
            echo "env_name=prod" >> $GITHUB_OUTPUT
          fi
      - name: Use variable setup in previous step
        run: echo "Using envirnoment ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}  
      
  build:
    runs-on: ubuntu-latest
    needs: envbranch
    
    environment:
      name: ${{ needs.envbranch.outputs.env_name }}
    env:
      duplo_token: "${{ secrets.DUPLO_TOKEN }}"
      TENANT_NAME: "${{ vars.TENANT_NAME }}"
      SERVICE_NAME: "${{ vars.SERVICE_NAME }}"
      duplo_host: "${{ vars.duplo_host }}"
      
    steps:
      - name: Envirnoment that would be used
        run: echo "Using envirnoment ${{ needs.envbranch.outputs.env_name }}"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}

    - name: Get AWS credentials
      uses: duplocloud/ghactions-aws-jit@master
      with:
        tenant: default
    - name: Login to Amazon ECR
        id: login-ecr

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    
    - uses: actions/checkout@v4
    - name: Build .NET application
      uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      run: |
        cd EmployeeMasterWebAPI
        dotnet --version
        dotnet restore
        dotnet build
    - uses: actions/checkout@v4
    - name: Publish .NET application
      uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      run: |
        cd EmployeeMasterWebAPI
        dotnet --version
        dotnet test
        dotnet publish -c Release -o ./publish

     - name: Docker Build and Push
        uses: docker/build-push-action@v2
         with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ needs.envbranch.outputs.env_name }}-${{ github.sha }}
            
    outputs:
      image: "${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ needs.envbranch.outputs.env_name }}-${{ github.sha }}"   
      
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - envbranch
      - build
      
    environment:
      name: ${{ needs.envbranch.outputs.env_name }}
    env:
      duplo_token: "${{ secrets.DUPLO_TOKEN }}"
      TENANT_NAME: "${{ vars.TENANT_NAME }}"
      SERVICE_NAME: "${{ vars.SERVICE_NAME }}"
      duplo_host: "${{ vars.duplo_host }}"
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Update the backend service to use the new image.
      - name: Deploy
        uses: duplocloud/ghactions-service-update@master
        with:
          tenant: "${{ env.TENANT_NAME }}"
          services: |-
            [
              { "Name": "${{ env.SERVICE_NAME }}", "Image": "${{ needs.build.outputs.image }}" }
            ]
